cmake_minimum_required(VERSION 3.20)
project(ros2_control_demo_example_1_hardware LANGUAGES CXX)

if(CMAKE_CXX_COMPILER_ID MATCHES "(GNU|Clang)")
  add_compile_options(-Wall -Wextra)
endif()

# set the same behavior for windows as it is on linux
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)

# find dependencies
set(THIS_PACKAGE_INCLUDE_DEPENDS
  hardware_interface
  pluginlib
  rclcpp
  rclcpp_lifecycle
)

foreach(Dependency IN ITEMS ${THIS_PACKAGE_INCLUDE_DEPENDS})
  find_package(${Dependency} REQUIRED)
endforeach()

# COMPILE
add_library(${PROJECT_NAME} SHARED
  hardware_interface/src/hardware_interface.cpp
)
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17)
target_include_directories(${PROJECT_NAME} PUBLIC
$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/hardware_interface/include>
$<INSTALL_INTERFACE:include/hardware_interface>
)
ament_target_dependencies(${PROJECT_NAME} PUBLIC ${THIS_PACKAGE_INCLUDE_DEPENDS})

# INSTALL
install(
  DIRECTORY hardware_interface/include/
  DESTINATION share/ros2_control_demo_example_1_hardware
)

install(
  DIRECTORY controller_interface/config
  DESTINATION share/ros2_control_demo_example_1_hardware
)

install(
  DIRECTORY robot_description/urdf
  DESTINATION share/ros2_control_demo_example_1_hardware
)

# PACKAGE
ament_package()